name: Sync Dev Branches on PR Merge

on:
  pull_request:
    types: [closed]
    branches: [main]

permissions:
  contents: write
  pull-requests: write

jobs:
  sync-dev-branches:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Sync dev branches
        run: |
          git fetch origin
          
          DEV_BRANCHES=$(git branch -r | grep 'origin/dev/' | grep -v HEAD | sed 's/origin\///' | xargs)
          
          if [ -z "$DEV_BRANCHES" ]; then
            echo "‚ÑπÔ∏è Aucune branche dev/* √† synchroniser"
            exit 0
          fi
          
          echo "üîÑ Branches √† synchroniser: $DEV_BRANCHES"
          
          SYNC_SUCCESS=0
          SYNC_SKIPPED=0
          SYNC_FAILED=0
          
          for branch in $DEV_BRANCHES; do
            echo ""
            echo "üìù V√©rification de $branch..."
            
            # Checkout de la branche
            if ! git checkout $branch; then
              echo "‚ùå Impossible de checkout $branch"
              ((SYNC_FAILED++))
              continue
            fi
            
            # V√©rifier si la branche est d√©j√† √† jour
            git fetch origin $branch
            LOCAL_COMMIT=$(git rev-parse HEAD)
            MAIN_COMMIT=$(git rev-parse origin/main)
            
            # V√©rifier si main a des commits que la branche n'a pas
            BEHIND_COUNT=$(git rev-list --count HEAD..origin/main)
            
            if [ "$BEHIND_COUNT" -eq 0 ]; then
              echo "‚úÖ $branch d√©j√† √† jour (aucun commit √† synchroniser)"
              ((SYNC_SKIPPED++))
              continue
            fi
            
            echo "üîÑ $branch en retard de $BEHIND_COUNT commits, synchronisation..."
            
            # Tentative de merge
            if git merge origin/main --no-edit; then
              # V√©rifier s'il y a quelque chose √† pousser
              if git diff --quiet HEAD origin/$branch; then
                echo "‚úÖ $branch synchronis√©e localement (rien √† pousser)"
                ((SYNC_SUCCESS++))
              else
                # Il y a des changements, on pousse
                if git push origin $branch; then
                  echo "‚úÖ $branch synchronis√©e et pouss√©e"
                  ((SYNC_SUCCESS++))
                else
                  echo "‚ùå √âchec du push pour $branch"
                  ((SYNC_FAILED++))
                fi
              fi
            else
              echo "‚ö†Ô∏è Conflits d√©tect√©s sur $branch - abandonn√©e"
              git merge --abort
              ((SYNC_FAILED++))
            fi
          done
          
          # Retour sur main
          git checkout main
          
          echo ""
          echo "üìä R√©sum√©:"
          echo "   ‚úÖ Synchronis√©es: $SYNC_SUCCESS"
          echo "   ‚è≠Ô∏è  D√©j√† √† jour: $SYNC_SKIPPED" 
          echo "   ‚ùå √âchecs: $SYNC_FAILED"
          
          # L'action n'√©choue que si toutes les branches ont √©chou√©
          if [ $SYNC_FAILED -gt 0 ] && [ $((SYNC_SUCCESS + SYNC_SKIPPED)) -eq 0 ]; then
            echo "::error::Toutes les synchronisations ont √©chou√©"
            exit 1
          elif [ $SYNC_FAILED -gt 0 ]; then
            echo "::warning::Certaines branches n'ont pas pu √™tre synchronis√©es"
          fi
